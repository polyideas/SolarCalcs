define arcsin(x) {
if (x^2 == 1) return (x * a(1)*2)
return (a(x/sqrt(1-x^2)))
}


define arccos(x) {
if (x == 0) return (a(1)*2)
return (a(sqrt(1-x^2)/x))
}

define acos (x)
{

	return atan2(sqrt(1-x*x), x)

}

define asin(x) { return (atan2(x, sqrt(1 - x ^ 2))) }


define tan(x){
	return s(x)/c(x)
}

define rad2deg(x) {
	return x*180/3.14159265
}

define deg2rad(x) {
	return x*3.14159265/180
}

/*define mod(x,y) {
	scale = 0
	z = x/y
	scale = 5
	r = x-z*y
	if(x<0 || y<0 )
	{
		r=r*-1
	}
	if(x<y && x < 0)
	{
		r = y - r
	}
	return r	
	
}*/

define mod(a,b){
	auto c,tmp_scale
	tmp_scale=scale(sqrt(2))
	scale=0
	c=a%b
	scale=tmp_scale
	if(a>=0) return(c)
	if(c==0) return(0)
        return(c+b)	
}


define is_bigger(x,y)
{
	if(x>y){return 1}
	return 0
}
define sgn(x) {
        if (x == 0) {
                return(0);
        } else if (x < 0) {
                return(-1);
        } else if (x > 0) {
                return(1);
        }
}
 
define abs(x) {
        if (x < 0) {
                return(-1 * x);
        } else {
                return(x);
        }
}
 
define atan2(y, x) {
        auto pi, fi;
 
        pi = 4 * a(1);
 
        if (y == 0) {
                if (x > 0) {
                        return(0);
                } else if (x == 0) {
                        print "undefined\n";
                        halt;
                } else if (x < 0) {
                        return(pi);
                }
        }
 
        fi = a(abs(y/x));
 
        if (x > 0) {
                return(fi * sgn(y));
        } else if (x == 0) {
                return(pi * sgn(y) / 2);
        } else if (x < 0) {
                return((pi - fi) * sgn(y));
        }
}
